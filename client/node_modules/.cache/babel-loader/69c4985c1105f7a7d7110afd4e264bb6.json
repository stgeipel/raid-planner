{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport DashboardLayout from '../components/layout/DashboardLayout';\nimport { useState } from 'react';\nimport { getFetcher } from '../utils/fetcher';\nimport useSWR from 'swr';\n\nvar Home = function Home() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  React.useEffect(function () {\n    var _useSWR = useSWR(\"/api/auth\", getFetcher),\n        loggedInUser = _useSWR.data,\n        error = _useSWR.error;\n\n    if (!ErrorEvent) {\n      setUser(loggedInUser);\n      console.log(loggedInUser);\n    }\n  });\n  return /*#__PURE__*/React.createElement(DashboardLayout, null);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/steffengeipel/dev/github/stgeipel/raid-planner/client/pages/index.tsx"],"names":["React","DashboardLayout","useState","getFetcher","useSWR","Home","user","setUser","useEffect","loggedInUser","data","error","ErrorEvent","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AAGA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAM;AAAA,kBACHH,QAAQ,CAAC,IAAD,CADL;AAAA;AAAA,MACpBI,IADoB;AAAA,MACdC,OADc;;AAG3BP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AAAA,kBACkBJ,MAAM,cAAcD,UAAd,CADxB;AAAA,QACNM,YADM,WACZC,IADY;AAAA,QACQC,KADR,WACQA,KADR;;AAEpB,QAAI,CAACC,UAAL,EAAiB;AACfL,MAAAA,OAAO,CAACE,YAAD,CAAP;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACD;AACF,GAND;AAQA,sBAAO,oBAAC,eAAD,OAAP;AACD,CAZD;;AAcA,eAAeJ,IAAf","sourcesContent":["import React from 'react';\nimport DashboardLayout from '../components/layout/DashboardLayout';\nimport { NextPage } from 'next';\nimport { getUser } from '../utils/hook/user';\nimport { useState } from 'react';\nimport { getFetcher } from '../utils/fetcher';\nimport useSWR from 'swr';\n\nconst Home: NextPage = () => {\n  const [user, setUser] = useState(null);\n\n  React.useEffect(() => {\n    const { data: loggedInUser, error } = useSWR(`/api/auth`, getFetcher);\n    if (!ErrorEvent) {\n      setUser(loggedInUser);\n      console.log(loggedInUser);\n    }\n  });\n\n  return <DashboardLayout></DashboardLayout>;\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}